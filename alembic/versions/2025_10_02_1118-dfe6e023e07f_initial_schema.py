"""initial schema

Revision ID: dfe6e023e07f
Revises: 
Create Date: 2025-10-02 11:18:23.675673

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dfe6e023e07f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('amenities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.Enum('BASIC', 'SAFETY', 'ACCESSIBILITY', 'KITCHEN', 'ENTERTAINMENT', name='amenitycategory'), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_amenities_category'), 'amenities', ['category'], unique=False)
    op.create_index(op.f('ix_amenities_name'), 'amenities', ['name'], unique=True)
    op.create_table('locations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('address', sa.String(length=500), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.CheckConstraint('latitude >= -90 AND latitude <= 90', name='valid_latitude'),
    sa.CheckConstraint('longitude >= -180 AND longitude <= 180', name='valid_longitude'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_location_city_country', 'locations', ['city', 'country'], unique=False)
    op.create_index('idx_location_coordinates', 'locations', ['latitude', 'longitude'], unique=False)
    op.create_index(op.f('ix_locations_city'), 'locations', ['city'], unique=False)
    op.create_index(op.f('ix_locations_country'), 'locations', ['country'], unique=False)
    op.create_table('safety_features',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_safety_features_name'), 'safety_features', ['name'], unique=True)
    op.create_table('properties',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('slug', sa.String(length=250), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('property_type', sa.Enum('HOUSE', 'APARTMENT', 'GUEST_HOUSE', 'HOTEL', name='propertytype'), nullable=False),
    sa.Column('place_type', sa.Enum('ENTIRE_PLACE', 'PRIVATE_ROOM', 'SHARED_ROOM', name='placetype'), nullable=False),
    sa.Column('bedrooms', sa.Integer(), nullable=False),
    sa.Column('beds', sa.Integer(), nullable=False),
    sa.Column('bathrooms', sa.Float(), nullable=False),
    sa.Column('max_guests', sa.Integer(), nullable=False),
    sa.Column('max_adults', sa.Integer(), nullable=False),
    sa.Column('max_children', sa.Integer(), nullable=False),
    sa.Column('max_infants', sa.Integer(), nullable=False),
    sa.Column('pets_allowed', sa.Boolean(), nullable=True),
    sa.Column('price_per_night', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('cleaning_fee', sa.Integer(), nullable=True),
    sa.Column('service_fee', sa.Integer(), nullable=True),
    sa.Column('weekly_discount', sa.Integer(), nullable=True),
    sa.Column('monthly_discount', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('verification_status', sa.Enum('PENDING', 'VERIFIED', 'REJECTED', name='verificationstatus'), nullable=False),
    sa.Column('instant_book', sa.Boolean(), nullable=True),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=True),
    sa.Column('host_id', sa.UUID(), nullable=False),
    sa.Column('host_name', sa.String(length=200), nullable=False),
    sa.Column('host_email', sa.String(length=255), nullable=False),
    sa.Column('host_avatar', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('average_rating >= 0 AND average_rating <= 5', name='valid_rating'),
    sa.CheckConstraint('bathrooms >= 0', name='non_negative_bathrooms'),
    sa.CheckConstraint('bedrooms >= 0', name='non_negative_bedrooms'),
    sa.CheckConstraint('beds >= 0', name='non_negative_beds'),
    sa.CheckConstraint('max_guests > 0', name='positive_max_guests'),
    sa.CheckConstraint('price_per_night > 0', name='positive_price'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_property_host_active', 'properties', ['host_id', 'is_active'], unique=False)
    op.create_index('idx_property_location_active', 'properties', ['location_id', 'is_active'], unique=False)
    op.create_index('idx_property_search', 'properties', ['property_type', 'place_type', 'is_active', 'verification_status'], unique=False)
    op.create_index(op.f('ix_properties_average_rating'), 'properties', ['average_rating'], unique=False)
    op.create_index(op.f('ix_properties_host_id'), 'properties', ['host_id'], unique=False)
    op.create_index(op.f('ix_properties_id'), 'properties', ['id'], unique=False)
    op.create_index(op.f('ix_properties_instant_book'), 'properties', ['instant_book'], unique=False)
    op.create_index(op.f('ix_properties_is_active'), 'properties', ['is_active'], unique=False)
    op.create_index(op.f('ix_properties_is_featured'), 'properties', ['is_featured'], unique=False)
    op.create_index(op.f('ix_properties_place_type'), 'properties', ['place_type'], unique=False)
    op.create_index(op.f('ix_properties_property_type'), 'properties', ['property_type'], unique=False)
    op.create_index(op.f('ix_properties_slug'), 'properties', ['slug'], unique=True)
    op.create_index(op.f('ix_properties_title'), 'properties', ['title'], unique=False)
    op.create_index(op.f('ix_properties_verification_status'), 'properties', ['verification_status'], unique=False)
    op.create_table('availabilities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('price_override', sa.Integer(), nullable=True),
    sa.CheckConstraint('end_date >= start_date', name='valid_date_range'),
    sa.CheckConstraint('price_override IS NULL OR price_override > 0', name='positive_price_override'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_availability_property_dates', 'availabilities', ['property_id', 'start_date', 'end_date'], unique=False)
    op.create_index(op.f('ix_availabilities_end_date'), 'availabilities', ['end_date'], unique=False)
    op.create_index(op.f('ix_availabilities_property_id'), 'availabilities', ['property_id'], unique=False)
    op.create_index(op.f('ix_availabilities_start_date'), 'availabilities', ['start_date'], unique=False)
    op.create_table('property_amenities',
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('amenity_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['amenity_id'], ['amenities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('property_id', 'amenity_id')
    )
    op.create_index('idx_property_amenities_amenity', 'property_amenities', ['amenity_id'], unique=False)
    op.create_index('idx_property_amenities_property', 'property_amenities', ['property_id'], unique=False)
    op.create_table('property_images',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('image_url', sa.String(length=1000), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('is_cover', sa.Boolean(), nullable=True),
    sa.Column('alt_text', sa.String(length=255), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('property_id', 'display_order', name='unique_image_order_per_property')
    )
    op.create_index('idx_property_images_order', 'property_images', ['property_id', 'display_order'], unique=False)
    op.create_index(op.f('ix_property_images_property_id'), 'property_images', ['property_id'], unique=False)
    op.create_table('property_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('rule_text', sa.String(length=500), nullable=False),
    sa.Column('rule_type', sa.Enum('HOUSE_RULES', 'CANCELLATION_POLICY', 'CHECK_IN_POLICY', name='ruletype'), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_property_rules_type', 'property_rules', ['property_id', 'rule_type'], unique=False)
    op.create_index(op.f('ix_property_rules_property_id'), 'property_rules', ['property_id'], unique=False)
    op.create_index(op.f('ix_property_rules_rule_type'), 'property_rules', ['rule_type'], unique=False)
    op.create_table('property_safety_features',
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('safety_feature_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['safety_feature_id'], ['safety_features.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('property_id', 'safety_feature_id')
    )
    op.create_index('idx_property_safety_features_feature', 'property_safety_features', ['safety_feature_id'], unique=False)
    op.create_index('idx_property_safety_features_property', 'property_safety_features', ['property_id'], unique=False)
    op.create_table('reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('cleanliness_rating', sa.Integer(), nullable=True),
    sa.Column('accuracy_rating', sa.Integer(), nullable=True),
    sa.Column('communication_rating', sa.Integer(), nullable=True),
    sa.Column('location_rating', sa.Integer(), nullable=True),
    sa.Column('check_in_rating', sa.Integer(), nullable=True),
    sa.Column('value_rating', sa.Integer(), nullable=True),
    sa.Column('helpful_count', sa.Integer(), nullable=False),
    sa.Column('reported', sa.Boolean(), nullable=False),
    sa.Column('is_verified_stay', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('accuracy_rating IS NULL OR (accuracy_rating >= 1 AND accuracy_rating <= 5)', name='valid_accuracy'),
    sa.CheckConstraint('check_in_rating IS NULL OR (check_in_rating >= 1 AND check_in_rating <= 5)', name='valid_check_in'),
    sa.CheckConstraint('cleanliness_rating IS NULL OR (cleanliness_rating >= 1 AND cleanliness_rating <= 5)', name='valid_cleanliness'),
    sa.CheckConstraint('communication_rating IS NULL OR (communication_rating >= 1 AND communication_rating <= 5)', name='valid_communication'),
    sa.CheckConstraint('helpful_count >= 0', name='non_negative_helpful'),
    sa.CheckConstraint('location_rating IS NULL OR (location_rating >= 1 AND location_rating <= 5)', name='valid_location'),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='valid_overall_rating'),
    sa.CheckConstraint('value_rating IS NULL OR (value_rating >= 1 AND value_rating <= 5)', name='valid_value'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('property_id', 'user_id', name='one_review_per_user_per_property')
    )
    op.create_index('idx_review_property_created', 'reviews', ['property_id', 'created_at'], unique=False)
    op.create_index('idx_review_user_created', 'reviews', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_reviews_property_id'), 'reviews', ['property_id'], unique=False)
    op.create_index(op.f('ix_reviews_user_id'), 'reviews', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reviews_user_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_property_id'), table_name='reviews')
    op.drop_index('idx_review_user_created', table_name='reviews')
    op.drop_index('idx_review_property_created', table_name='reviews')
    op.drop_table('reviews')
    op.drop_index('idx_property_safety_features_property', table_name='property_safety_features')
    op.drop_index('idx_property_safety_features_feature', table_name='property_safety_features')
    op.drop_table('property_safety_features')
    op.drop_index(op.f('ix_property_rules_rule_type'), table_name='property_rules')
    op.drop_index(op.f('ix_property_rules_property_id'), table_name='property_rules')
    op.drop_index('idx_property_rules_type', table_name='property_rules')
    op.drop_table('property_rules')
    op.drop_index(op.f('ix_property_images_property_id'), table_name='property_images')
    op.drop_index('idx_property_images_order', table_name='property_images')
    op.drop_table('property_images')
    op.drop_index('idx_property_amenities_property', table_name='property_amenities')
    op.drop_index('idx_property_amenities_amenity', table_name='property_amenities')
    op.drop_table('property_amenities')
    op.drop_index(op.f('ix_availabilities_start_date'), table_name='availabilities')
    op.drop_index(op.f('ix_availabilities_property_id'), table_name='availabilities')
    op.drop_index(op.f('ix_availabilities_end_date'), table_name='availabilities')
    op.drop_index('idx_availability_property_dates', table_name='availabilities')
    op.drop_table('availabilities')
    op.drop_index(op.f('ix_properties_verification_status'), table_name='properties')
    op.drop_index(op.f('ix_properties_title'), table_name='properties')
    op.drop_index(op.f('ix_properties_slug'), table_name='properties')
    op.drop_index(op.f('ix_properties_property_type'), table_name='properties')
    op.drop_index(op.f('ix_properties_place_type'), table_name='properties')
    op.drop_index(op.f('ix_properties_is_featured'), table_name='properties')
    op.drop_index(op.f('ix_properties_is_active'), table_name='properties')
    op.drop_index(op.f('ix_properties_instant_book'), table_name='properties')
    op.drop_index(op.f('ix_properties_id'), table_name='properties')
    op.drop_index(op.f('ix_properties_host_id'), table_name='properties')
    op.drop_index(op.f('ix_properties_average_rating'), table_name='properties')
    op.drop_index('idx_property_search', table_name='properties')
    op.drop_index('idx_property_location_active', table_name='properties')
    op.drop_index('idx_property_host_active', table_name='properties')
    op.drop_table('properties')
    op.drop_index(op.f('ix_safety_features_name'), table_name='safety_features')
    op.drop_table('safety_features')
    op.drop_index(op.f('ix_locations_country'), table_name='locations')
    op.drop_index(op.f('ix_locations_city'), table_name='locations')
    op.drop_index('idx_location_coordinates', table_name='locations')
    op.drop_index('idx_location_city_country', table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_amenities_name'), table_name='amenities')
    op.drop_index(op.f('ix_amenities_category'), table_name='amenities')
    op.drop_table('amenities')
    # ### end Alembic commands ###
